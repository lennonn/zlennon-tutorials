<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	           			http://www.springframework.org/schema/tx
	           			http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	           			http://www.springframework.org/schema/util
	           			http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	 <!--JNDI 数据源  -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:jboss/datasources/test</value>
		</property>
	</bean> -->
	<!-- <util:properties id="dataSourceProps" location="classpath:jdbc.properties"/> -->
	<bean id="aopClass" class="com.zl.common.aop.AOPClass"/>
	<!--加载properties文件  -->
	 <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">

				<value>classpath:jdbc.properties</value>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>


	<!-- JDBC 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="driverClassName">
				<value>${jdbc.driverClassName}</value>
			</property>
			<property name="url">
				<value>${jdbc.url}</value>
			</property>
			 	<property name="username"> <value>${jdbc.username}</value>
			</property>
			 <property name="password"> <value>${jdbc.password}</value>
			</property>
	</bean>
	<bean id="nativeJdbcExtractor"
        class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"
		    lazy-init="true"/>

   <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	   <property name="dataSource" ref="dataSource" />
	   <property name="nativeJdbcExtractor" ref="nativeJdbcExtractor" />
   </bean>
   <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations">
        	<list>
        		<value>classpath:com/zl/persistence/hibernate/mapping/Dept.hbm.xml</value>
        	</list>
        </property>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
        <!-- <property name="hibernateProperties">
        	<value>
        		hibernate.show_sql=true
        		hibernate.hbm2ddl.auto=update
        		hibernate.format_sql=true
        		hibernate.dialect=org.hibernate.dialect.OracleDialect
        	</value>
        </property> -->
	</bean>
	<bean id ="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
   <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  		<property name="dataSource" ref="dataSource"/>
  		<!-- <property name="hibernateTemplate" ref="hibernateTemplate"></property> -->
  	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
	    <tx:attributes>
            <tx:method name="save*" propagation="REQUIRES_NEW" />
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="*" read-only="false"/>
        </tx:attributes>
	</tx:advice>

	 <aop:config>
	        <aop:pointcut id="interceptorPointCuts" expression="execution(* com.zl.persistence.hibernate.*.*(..))" />
	        <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />
	        <aop:aspect ref ="aopClass">
		        <aop:before method="before" pointcut-ref="interceptorPointCuts"/>
		        <aop:after  method="after"  pointcut-ref="interceptorPointCuts"/>
	        </aop:aspect>
	  </aop:config>
</beans>