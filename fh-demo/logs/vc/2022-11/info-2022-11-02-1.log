[16:38:21:142] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting FhDemoApplication using Java 17.0.3.1 on zhanglei with PID 10076 (D:\IdeaProject\fh-demo\target\classes started by EDY in D:\IdeaProject\fh-demo)
[16:38:21:156] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[16:38:23:470] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:38:23:471] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[16:38:23:963] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 484 ms. Found 1 JPA repository interfaces.
[16:38:24:009] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:38:24:010] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[16:38:24:030] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[16:38:24:030] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
[16:38:24:239] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=21492c74-5b7f-3375-a52b-284f66e4995b
[16:38:24:379] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:38:24:379] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:38:24:381] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:38:24:723] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:108) - Tomcat initialized with port(s): 8081 (http)
[16:38:24:734] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8081"]
[16:38:24:735] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:38:24:735] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.65]
[16:38:24:839] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:38:24:839] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292) - Root WebApplicationContext: initialization completed in 3608 ms
[16:38:25:010] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:38:25:281] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:38:25:346] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[16:38:25:566] [INFO] - org.hibernate.Version.logVersion(Version.java:44) - HHH000412: Hibernate ORM core version 5.6.10.Final
[16:38:25:907] [INFO] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56) - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[16:38:26:149] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[16:38:26:742] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[16:38:26:768] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[16:38:26:775] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[16:38:27:198] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[16:38:29:469] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[16:38:29:588] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8081"]
[16:38:29:618] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:220) - Tomcat started on port(s): 8081 (http) with context path ''
[16:38:29:877] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[16:38:29:951] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#3794b7b1:0/SimpleConnection@7daf167 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 63229]
[16:38:29:955] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-fULmb4meRrW2rK4yvBPvxA) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[16:38:30:031] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started FhDemoApplication in 9.663 seconds (JVM running for 12.077)
[16:38:30:127] [INFO] - com.example.fhdemo.FhDemoApplication.lambda$main$0(FhDemoApplication.java:24) - Mq消息发送成功，correlationData：CorrelationData [id=sssss-1667378310035] ， messageId：sssss-1667378310035,cause:null
[16:46:56:224] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[16:49:04:309] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:305) - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.mq.rabbit.SendAndReceivedMsgTest], using SpringBootContextLoader
[16:49:04:320] [INFO] - org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) - Could not detect default resource locations for test class [com.example.mq.rabbit.SendAndReceivedMsgTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[16:49:04:322] [INFO] - org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) - Could not detect default configuration classes for test class [com.example.mq.rabbit.SendAndReceivedMsgTest]: SendAndReceivedMsgTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[16:50:03:689] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:305) - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.mq.rabbit.SendAndReceivedMsgTest], using SpringBootContextLoader
[16:50:03:703] [INFO] - org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) - Could not detect default resource locations for test class [com.example.mq.rabbit.SendAndReceivedMsgTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[16:50:03:705] [INFO] - org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) - Could not detect default configuration classes for test class [com.example.mq.rabbit.SendAndReceivedMsgTest]: SendAndReceivedMsgTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[16:52:35:573] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:305) - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.fhdemo.FhDemoApplicationTests], using SpringBootContextLoader
[16:52:35:581] [INFO] - org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) - Could not detect default resource locations for test class [com.example.fhdemo.FhDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
[16:52:35:583] [INFO] - org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) - Could not detect default configuration classes for test class [com.example.fhdemo.FhDemoApplicationTests]: FhDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[16:52:35:729] [INFO] - org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:238) - Found @SpringBootConfiguration com.example.fhdemo.FhDemoApplication for test class com.example.fhdemo.FhDemoApplicationTests
[16:52:35:827] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:245) - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[16:52:35:857] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:174) - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@13cda7c9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5aa6202e, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3af9aa66, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@771158fb, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@91c4a3f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@62d0ac62, org.springframework.test.context.transaction.TransactionalTestExecutionListener@150d80c4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6826c41e, org.springframework.test.context.event.EventPublishingTestExecutionListener@3003697, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@64d43929, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1d269ed7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@437ebf59, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@41c89d2f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@410e94e, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2d691f3d]
[16:52:36:318] [WARN] - org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer.logDuplicateJsonObjectsWarning(DuplicateJsonObjectContextCustomizerFactory.java:78) - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/D:/Server/Maven/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/D:/Server/Maven/repository/org/json/json/20220924/json-20220924.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

[16:52:36:352] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting FhDemoApplicationTests using Java 17.0.3.1 on zhanglei with PID 1464 (started by EDY in D:\IdeaProject\fh-demo)
[16:52:36:356] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[16:52:37:296] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:52:37:302] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[16:52:37:705] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 392 ms. Found 1 JPA repository interfaces.
[16:52:37:720] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:52:37:722] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[16:52:37:738] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[16:52:37:739] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
[16:52:38:048] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=1e994a33-a9fe-3fa9-b2e0-f947610ba76b
[16:52:38:320] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:52:38:322] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:52:38:325] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:52:38:538] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:52:38:815] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:52:38:904] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[16:52:39:015] [INFO] - org.hibernate.Version.logVersion(Version.java:44) - HHH000412: Hibernate ORM core version 5.6.10.Final
[16:52:39:293] [INFO] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56) - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[16:52:39:468] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[16:52:39:982] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[16:52:39:990] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[16:52:39:993] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[16:52:40:951] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[16:52:43:377] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[16:52:43:449] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[16:52:43:524] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#5f1c406e:0/SimpleConnection@6915b614 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 50567]
[16:52:43:529] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-5tAJYVe_QKKPHccHRjcCTw) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[16:52:43:613] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started FhDemoApplicationTests in 7.717 seconds (JVM running for 9.461)
[16:52:44:030] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[16:52:44:607] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[16:52:44:659] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[16:52:44:666] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[16:52:44:667] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[16:52:44:670] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[16:52:44:672] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[16:53:12:790] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:305) - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.fhdemo.SendAndReceivedMsgTest], using SpringBootContextLoader
[16:53:12:801] [INFO] - org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) - Could not detect default resource locations for test class [com.example.fhdemo.SendAndReceivedMsgTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[16:53:12:803] [INFO] - org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) - Could not detect default configuration classes for test class [com.example.fhdemo.SendAndReceivedMsgTest]: SendAndReceivedMsgTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[16:53:12:911] [INFO] - org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:238) - Found @SpringBootConfiguration com.example.fhdemo.FhDemoApplication for test class com.example.fhdemo.SendAndReceivedMsgTest
[16:53:12:998] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:245) - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[16:53:13:015] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:174) - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@41e1455d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4e558728, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5eccd3b9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4d6f197e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6ef7623, org.springframework.test.context.support.DirtiesContextTestExecutionListener@64e1dd11, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5c089b2f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6999cd39, org.springframework.test.context.event.EventPublishingTestExecutionListener@14bae047, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7ed9ae94, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@66908383, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41477a6d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2bc12da, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3122b117, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@534ca02b]
[16:53:13:464] [WARN] - org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer.logDuplicateJsonObjectsWarning(DuplicateJsonObjectContextCustomizerFactory.java:78) - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/D:/Server/Maven/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/D:/Server/Maven/repository/org/json/json/20220924/json-20220924.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

[16:53:13:490] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting SendAndReceivedMsgTest using Java 17.0.3.1 on zhanglei with PID 9380 (started by EDY in D:\IdeaProject\fh-demo)
[16:53:13:494] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[16:53:14:470] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:53:14:473] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[16:53:14:864] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 380 ms. Found 1 JPA repository interfaces.
[16:53:14:883] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:53:14:885] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[16:53:14:911] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[16:53:14:912] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
[16:53:15:235] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=1e994a33-a9fe-3fa9-b2e0-f947610ba76b
[16:53:15:465] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:53:15:468] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:53:15:474] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:53:15:730] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:53:15:951] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:53:16:040] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[16:53:16:139] [INFO] - org.hibernate.Version.logVersion(Version.java:44) - HHH000412: Hibernate ORM core version 5.6.10.Final
[16:53:16:404] [INFO] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56) - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[16:53:16:556] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[16:53:17:105] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[16:53:17:113] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[16:53:17:118] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[16:53:18:237] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[16:53:20:265] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[16:53:20:323] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[16:53:20:389] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#2dc77962:0/SimpleConnection@123fd460 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 50628]
[16:53:20:396] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-1NDaP0e9QnyidBQuKlSSSg) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[16:53:20:490] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started SendAndReceivedMsgTest in 7.434 seconds (JVM running for 9.2)
[16:53:20:512] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.SendAndReceivedMsgTest.rabbitTemplate
[16:53:21:031] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting JUnitStarter using Java 17.0.3.1 on zhanglei with PID 9380 (started by EDY in D:\IdeaProject\fh-demo)
[16:53:21:033] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[16:53:21:328] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:53:21:328] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[16:53:21:346] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 17 ms. Found 1 JPA repository interfaces.
[16:53:21:351] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:53:21:352] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[16:53:21:359] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[16:53:21:360] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
[16:53:21:426] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=d671640a-2e9a-3116-b5d7-cb707b6923ff
[16:53:21:468] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:53:21:470] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:53:21:471] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:53:21:753] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:108) - Tomcat initialized with port(s): 8081 (http)
[16:53:21:765] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8081"]
[16:53:21:765] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:53:21:766] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.65]
[16:53:21:939] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:53:21:939] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292) - Root WebApplicationContext: initialization completed in 903 ms
[16:53:22:054] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-2 - Starting...
[16:53:22:059] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-2 - Start completed.
[16:53:22:067] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[16:53:22:074] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[16:53:22:097] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[16:53:22:098] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[16:53:22:101] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[16:53:22:830] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[16:53:23:382] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[16:53:23:391] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8081"]
[16:53:23:407] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:220) - Tomcat started on port(s): 8081 (http) with context path ''
[16:53:23:742] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[16:53:23:759] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#71bb6009:0/SimpleConnection@5d12fa92 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 50632]
[16:53:23:760] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-MX7Rz2YsRyaEUgm0CojHeA) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[16:53:23:804] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started JUnitStarter in 3.021 seconds (JVM running for 12.513)
[16:53:23:845] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:92) - Stopping redis server...
[16:53:23:857] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:99) - Redis exited
[16:53:23:897] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[16:53:23:898] [INFO] - com.example.fhdemo.SendAndReceivedMsgTest.lambda$testSendAndReceivedMsg$0(SendAndReceivedMsgTest.java:31) - Mq消息发送成功，correlationData：CorrelationData [id=sssss-1667379203807] ， messageId：sssss-1667379203807,cause:null
[16:53:24:492] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[16:53:24:507] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[16:53:24:517] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[16:53:24:518] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[16:53:24:520] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[16:53:24:522] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[16:53:24:547] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[16:53:24:804] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[16:53:24:827] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[16:53:24:836] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[16:53:24:836] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[16:53:24:837] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-2 - Shutdown initiated...
[16:53:24:838] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-2 - Shutdown completed.
[16:54:19:040] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:305) - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.fhdemo.SendAndReceivedMsgTest], using SpringBootContextLoader
[16:54:19:054] [INFO] - org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) - Could not detect default resource locations for test class [com.example.fhdemo.SendAndReceivedMsgTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[16:54:19:057] [INFO] - org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) - Could not detect default configuration classes for test class [com.example.fhdemo.SendAndReceivedMsgTest]: SendAndReceivedMsgTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[16:54:19:218] [INFO] - org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:238) - Found @SpringBootConfiguration com.example.fhdemo.FhDemoApplication for test class com.example.fhdemo.SendAndReceivedMsgTest
[16:54:19:304] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:245) - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[16:54:19:317] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:174) - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@41e1455d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4e558728, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5eccd3b9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4d6f197e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6ef7623, org.springframework.test.context.support.DirtiesContextTestExecutionListener@64e1dd11, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5c089b2f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6999cd39, org.springframework.test.context.event.EventPublishingTestExecutionListener@14bae047, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7ed9ae94, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@66908383, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41477a6d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2bc12da, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3122b117, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@534ca02b]
[16:54:19:839] [WARN] - org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer.logDuplicateJsonObjectsWarning(DuplicateJsonObjectContextCustomizerFactory.java:78) - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/D:/Server/Maven/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/D:/Server/Maven/repository/org/json/json/20220924/json-20220924.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

[16:54:19:874] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting SendAndReceivedMsgTest using Java 17.0.3.1 on zhanglei with PID 18716 (started by EDY in D:\IdeaProject\fh-demo)
[16:54:19:879] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[16:54:20:824] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:54:20:826] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[16:54:21:151] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 318 ms. Found 1 JPA repository interfaces.
[16:54:21:166] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:54:21:167] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[16:54:21:187] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[16:54:21:188] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
[16:54:21:506] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=1e994a33-a9fe-3fa9-b2e0-f947610ba76b
[16:54:21:861] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:54:21:865] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:54:21:870] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:54:22:132] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[16:54:22:303] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[16:54:22:386] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[16:54:22:472] [INFO] - org.hibernate.Version.logVersion(Version.java:44) - HHH000412: Hibernate ORM core version 5.6.10.Final
[16:54:22:679] [INFO] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56) - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[16:54:22:801] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[16:54:23:303] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[16:54:23:310] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[16:54:23:314] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[16:54:24:205] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[16:54:25:921] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[16:54:25:966] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[16:54:26:024] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#20505460:0/SimpleConnection@6c65c6f0 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 50683]
[16:54:26:031] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-uXVUZUh6QfySJN3m_7U1bA) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[16:54:26:119] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started SendAndReceivedMsgTest in 6.765 seconds (JVM running for 8.659)
[16:54:26:140] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.SendAndReceivedMsgTest.rabbitTemplate
[16:54:26:643] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting JUnitStarter using Java 17.0.3.1 on zhanglei with PID 18716 (started by EDY in D:\IdeaProject\fh-demo)
[16:54:26:645] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[16:54:26:914] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:54:26:915] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[16:54:26:933] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 17 ms. Found 1 JPA repository interfaces.
[16:54:26:938] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[16:54:26:938] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[16:54:26:945] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[16:54:26:946] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
[16:54:27:010] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=d671640a-2e9a-3116-b5d7-cb707b6923ff
[16:54:27:048] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:54:27:049] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:54:27:051] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[16:54:27:266] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:108) - Tomcat initialized with port(s): 8081 (http)
[16:54:27:278] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8081"]
[16:54:27:279] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[16:54:27:280] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.65]
[16:54:27:420] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[16:54:27:421] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292) - Root WebApplicationContext: initialization completed in 773 ms
[16:54:27:514] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-2 - Starting...
[16:54:27:519] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-2 - Start completed.
[16:54:27:528] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[16:54:27:533] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[16:54:27:566] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[16:54:27:566] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[16:54:27:567] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[16:54:27:975] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[16:54:28:591] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[16:54:28:600] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8081"]
[16:54:28:620] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:220) - Tomcat started on port(s): 8081 (http) with context path ''
[16:54:28:983] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[16:54:28:999] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#6f67312d:0/SimpleConnection@a683f92 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 50686]
[16:54:29:000] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-VkX4nxfyT0CY7fD9Ekz1oQ) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[16:54:29:036] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started JUnitStarter in 2.651 seconds (JVM running for 11.577)
[16:54:29:097] [INFO] - com.example.fhdemo.SendAndReceivedMsgTest.lambda$testSendAndReceivedMsg$0(SendAndReceivedMsgTest.java:31) - Mq消息发送成功，correlationData：CorrelationData [id=sssss-1667379269039] ， messageId：sssss-1667379269039,cause:null
[16:54:29:112] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:92) - Stopping redis server...
[16:54:29:122] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:99) - Redis exited
[16:54:29:137] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[16:54:29:137] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[16:54:29:159] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[16:54:29:172] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[16:54:29:173] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[16:54:29:177] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[16:54:29:179] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[16:54:29:215] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[16:54:30:044] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[16:54:30:066] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[16:54:30:083] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[16:54:30:083] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[16:54:30:084] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-2 - Shutdown initiated...
[16:54:30:085] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-2 - Shutdown completed.
[17:02:37:838] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:305) - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.fhdemo.SendAndReceivedMsgTest], using SpringBootContextLoader
[17:02:37:850] [INFO] - org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) - Could not detect default resource locations for test class [com.example.fhdemo.SendAndReceivedMsgTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[17:02:37:852] [INFO] - org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) - Could not detect default configuration classes for test class [com.example.fhdemo.SendAndReceivedMsgTest]: SendAndReceivedMsgTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[17:02:37:971] [INFO] - org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:238) - Found @SpringBootConfiguration com.example.fhdemo.FhDemoApplication for test class com.example.fhdemo.SendAndReceivedMsgTest
[17:02:38:086] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:245) - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[17:02:38:104] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:174) - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@41e1455d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4e558728, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5eccd3b9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4d6f197e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6ef7623, org.springframework.test.context.support.DirtiesContextTestExecutionListener@64e1dd11, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5c089b2f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6999cd39, org.springframework.test.context.event.EventPublishingTestExecutionListener@14bae047, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7ed9ae94, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@66908383, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41477a6d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2bc12da, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3122b117, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@534ca02b]
[17:02:38:610] [WARN] - org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer.logDuplicateJsonObjectsWarning(DuplicateJsonObjectContextCustomizerFactory.java:78) - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/D:/Server/Maven/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/D:/Server/Maven/repository/org/json/json/20220924/json-20220924.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

[17:02:38:629] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting SendAndReceivedMsgTest using Java 17.0.3.1 on zhanglei with PID 4300 (started by EDY in D:\IdeaProject\fh-demo)
[17:02:38:632] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[17:02:39:675] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:02:39:677] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[17:02:40:047] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 358 ms. Found 1 JPA repository interfaces.
[17:02:40:063] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:02:40:064] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[17:02:40:078] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[17:02:40:078] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
[17:02:40:356] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=1e994a33-a9fe-3fa9-b2e0-f947610ba76b
[17:02:40:554] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:02:40:557] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:02:40:562] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:02:40:775] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[17:02:41:016] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[17:02:41:091] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[17:02:41:179] [INFO] - org.hibernate.Version.logVersion(Version.java:44) - HHH000412: Hibernate ORM core version 5.6.10.Final
[17:02:41:378] [INFO] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56) - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[17:02:41:510] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[17:02:42:108] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[17:02:42:115] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[17:02:42:119] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[17:02:43:313] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[17:02:45:495] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[17:02:45:564] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[17:02:45:646] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#2dc77962:0/SimpleConnection@7410c197 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 52272]
[17:02:45:655] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-4U0nSyRATmufj8xPzgagTg) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[17:02:45:752] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started SendAndReceivedMsgTest in 7.594 seconds (JVM running for 9.41)
[17:02:45:778] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.SendAndReceivedMsgTest.rabbitTemplate
[17:02:46:347] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting JUnitStarter using Java 17.0.3.1 on zhanglei with PID 4300 (started by EDY in D:\IdeaProject\fh-demo)
[17:02:46:348] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[17:02:46:631] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:02:46:631] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[17:02:46:650] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 18 ms. Found 1 JPA repository interfaces.
[17:02:46:657] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:02:46:657] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[17:02:46:664] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[17:02:46:665] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
[17:02:46:744] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=d671640a-2e9a-3116-b5d7-cb707b6923ff
[17:02:46:779] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:02:46:781] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:02:46:782] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:02:46:998] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:108) - Tomcat initialized with port(s): 8081 (http)
[17:02:47:014] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8081"]
[17:02:47:015] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[17:02:47:016] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.65]
[17:02:47:222] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[17:02:47:223] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292) - Root WebApplicationContext: initialization completed in 871 ms
[17:02:47:329] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-2 - Starting...
[17:02:47:334] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-2 - Start completed.
[17:02:47:342] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[17:02:47:349] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[17:02:47:380] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[17:02:47:380] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[17:02:47:381] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[17:02:47:747] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[17:02:48:411] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[17:02:48:422] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8081"]
[17:02:48:440] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:220) - Tomcat started on port(s): 8081 (http) with context path ''
[17:02:48:852] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[17:02:48:868] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#667713c4:0/SimpleConnection@1acfb04c [delegate=amqp://guest@10.10.80.130:5672/, localPort= 52274]
[17:02:48:870] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-IhkeifdGRTS_pADTy2_dDw) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[17:02:48:906] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started JUnitStarter in 2.868 seconds (JVM running for 12.564)
[17:02:48:958] [INFO] - com.example.fhdemo.mq.rabbitmq.FanoutCustomer.start(FanoutCustomer.java:25) - mq consume startMix:{}{"timestamp":1665763173,"eventId":1899121568,"para":{"mix_stream_session_id":"20220315FmgCd5VsiIG0L5xb","output_stream_type":"1","output_stream_id":"20220315FmgCd5VsiIG0L5xb","is_update_layer":true,"roomid":"30786","sessionId":"1400335539_30786","serialNumber":"T2020000120220315000000084","userid":"30786_u1","customid":"88","input_stream_list":[{"input_stream_id":"canvas1","layout_params":{"image_layer":1,"input_type":3,"image_width":1920,"image_height":1080}},{"input_stream_id":"1400335539_30786_30786_u1_main","layout_params":{"image_layer":2,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.000000000000000,"location_y":0.000000000000000}},{"input_stream_id":"1400335539_30786_30786_u2_main","layout_params":{"image_layer":3,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.500000000000000,"location_y":0.000000000000000}}]}}
[17:02:48:958] [INFO] - com.example.fhdemo.mq.rabbitmq.FanoutCustomer.start(FanoutCustomer.java:25) - mq consume startMix:{}{"timestamp":1665763173,"eventId":1899121568,"para":{"mix_stream_session_id":"20220315FmgCd5VsiIG0L5xb","output_stream_type":"1","output_stream_id":"20220315FmgCd5VsiIG0L5xb","is_update_layer":true,"roomid":"30786","sessionId":"1400335539_30786","serialNumber":"T2020000120220315000000084","userid":"30786_u1","customid":"88","input_stream_list":[{"input_stream_id":"canvas1","layout_params":{"image_layer":1,"input_type":3,"image_width":1920,"image_height":1080}},{"input_stream_id":"1400335539_30786_30786_u1_main","layout_params":{"image_layer":2,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.000000000000000,"location_y":0.000000000000000}},{"input_stream_id":"1400335539_30786_30786_u2_main","layout_params":{"image_layer":3,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.500000000000000,"location_y":0.000000000000000}}]}}
[17:02:49:004] [INFO] - com.example.fhdemo.SendAndReceivedMsgTest.lambda$testSendAndReceivedMsg$0(SendAndReceivedMsgTest.java:31) - Mq消息发送成功，correlationData：CorrelationData [id=sssss-1667379768910] ， messageId：sssss-1667379768910,cause:null
[17:02:49:028] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:92) - Stopping redis server...
[17:02:49:036] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:99) - Redis exited
[17:02:49:080] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[17:02:49:962] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[17:02:49:983] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[17:02:49:990] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[17:02:49:991] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[17:02:49:994] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[17:02:49:995] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[17:02:50:028] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[17:02:50:966] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[17:02:50:990] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[17:02:51:004] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[17:02:51:004] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[17:02:51:005] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-2 - Shutdown initiated...
[17:02:51:006] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-2 - Shutdown completed.
[17:04:23:330] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:305) - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.fhdemo.SendAndReceivedMsgTest], using SpringBootContextLoader
[17:04:23:338] [INFO] - org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) - Could not detect default resource locations for test class [com.example.fhdemo.SendAndReceivedMsgTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[17:04:23:340] [INFO] - org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) - Could not detect default configuration classes for test class [com.example.fhdemo.SendAndReceivedMsgTest]: SendAndReceivedMsgTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[17:04:23:470] [INFO] - org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:238) - Found @SpringBootConfiguration com.example.fhdemo.FhDemoApplication for test class com.example.fhdemo.SendAndReceivedMsgTest
[17:04:23:551] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:245) - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[17:04:23:568] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:174) - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@41e1455d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4e558728, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5eccd3b9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4d6f197e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6ef7623, org.springframework.test.context.support.DirtiesContextTestExecutionListener@64e1dd11, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5c089b2f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6999cd39, org.springframework.test.context.event.EventPublishingTestExecutionListener@14bae047, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7ed9ae94, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@66908383, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41477a6d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2bc12da, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3122b117, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@534ca02b]
[17:04:23:993] [WARN] - org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer.logDuplicateJsonObjectsWarning(DuplicateJsonObjectContextCustomizerFactory.java:78) - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/D:/Server/Maven/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/D:/Server/Maven/repository/org/json/json/20220924/json-20220924.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

[17:04:24:012] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting SendAndReceivedMsgTest using Java 17.0.3.1 on zhanglei with PID 7164 (started by EDY in D:\IdeaProject\fh-demo)
[17:04:24:015] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[17:04:24:859] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:04:24:861] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[17:04:25:217] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 341 ms. Found 1 JPA repository interfaces.
[17:04:25:231] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:04:25:232] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[17:04:25:246] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[17:04:25:246] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
[17:04:25:574] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=1e994a33-a9fe-3fa9-b2e0-f947610ba76b
[17:04:25:792] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:04:25:796] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:04:25:802] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:04:26:045] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[17:04:26:245] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[17:04:26:334] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[17:04:26:407] [INFO] - org.hibernate.Version.logVersion(Version.java:44) - HHH000412: Hibernate ORM core version 5.6.10.Final
[17:04:26:642] [INFO] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56) - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[17:04:26:765] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[17:04:27:202] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[17:04:27:207] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[17:04:27:211] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[17:04:28:166] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[17:04:30:005] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[17:04:30:047] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[17:04:30:104] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#4c9bed65:0/SimpleConnection@532782f5 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 52340]
[17:04:30:110] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-W_tzBhUPTDOxhevPnyb53g) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[17:04:30:193] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started SendAndReceivedMsgTest in 6.582 seconds (JVM running for 8.331)
[17:04:30:222] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.SendAndReceivedMsgTest.rabbitTemplate
[17:04:30:704] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting JUnitStarter using Java 17.0.3.1 on zhanglei with PID 7164 (started by EDY in D:\IdeaProject\fh-demo)
[17:04:30:706] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[17:04:30:976] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:04:30:976] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[17:04:30:992] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 15 ms. Found 1 JPA repository interfaces.
[17:04:30:997] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:04:30:997] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[17:04:31:002] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[17:04:31:002] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
[17:04:31:057] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=d671640a-2e9a-3116-b5d7-cb707b6923ff
[17:04:31:091] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:04:31:093] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:04:31:094] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:04:31:277] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:108) - Tomcat initialized with port(s): 8081 (http)
[17:04:31:292] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8081"]
[17:04:31:293] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[17:04:31:293] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.65]
[17:04:31:430] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[17:04:31:430] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292) - Root WebApplicationContext: initialization completed in 721 ms
[17:04:31:517] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-2 - Starting...
[17:04:31:520] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-2 - Start completed.
[17:04:31:527] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[17:04:31:533] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[17:04:31:558] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[17:04:31:559] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[17:04:31:560] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[17:04:31:847] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[17:04:32:317] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[17:04:32:325] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8081"]
[17:04:32:350] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:220) - Tomcat started on port(s): 8081 (http) with context path ''
[17:04:32:688] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[17:04:32:705] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#7a5c502b:0/SimpleConnection@6c9fe061 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 52343]
[17:04:32:706] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-F7HrnJY7RGCn1L_R2-CR5w) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[17:04:32:745] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started JUnitStarter in 2.284 seconds (JVM running for 10.883)
[17:04:32:776] [INFO] - com.example.fhdemo.mq.rabbitmq.FanoutCustomer.start(FanoutCustomer.java:25) - mq consume startMix:{}{"timestamp":1665763173,"eventId":1899121568,"para":{"mix_stream_session_id":"20220315FmgCd5VsiIG0L5xb","output_stream_type":"1","output_stream_id":"20220315FmgCd5VsiIG0L5xb","is_update_layer":true,"roomid":"30786","sessionId":"1400335539_30786","serialNumber":"T2020000120220315000000084","userid":"30786_u1","customid":"88","input_stream_list":[{"input_stream_id":"canvas1","layout_params":{"image_layer":1,"input_type":3,"image_width":1920,"image_height":1080}},{"input_stream_id":"1400335539_30786_30786_u1_main","layout_params":{"image_layer":2,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.000000000000000,"location_y":0.000000000000000}},{"input_stream_id":"1400335539_30786_30786_u2_main","layout_params":{"image_layer":3,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.500000000000000,"location_y":0.000000000000000}}]}}
[17:04:32:776] [INFO] - com.example.fhdemo.mq.rabbitmq.FanoutCustomer.start(FanoutCustomer.java:25) - mq consume startMix:{}{"timestamp":1665763173,"eventId":1899121568,"para":{"mix_stream_session_id":"20220315FmgCd5VsiIG0L5xb","output_stream_type":"1","output_stream_id":"20220315FmgCd5VsiIG0L5xb","is_update_layer":true,"roomid":"30786","sessionId":"1400335539_30786","serialNumber":"T2020000120220315000000084","userid":"30786_u1","customid":"88","input_stream_list":[{"input_stream_id":"canvas1","layout_params":{"image_layer":1,"input_type":3,"image_width":1920,"image_height":1080}},{"input_stream_id":"1400335539_30786_30786_u1_main","layout_params":{"image_layer":2,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.000000000000000,"location_y":0.000000000000000}},{"input_stream_id":"1400335539_30786_30786_u2_main","layout_params":{"image_layer":3,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.500000000000000,"location_y":0.000000000000000}}]}}
[17:04:32:787] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:92) - Stopping redis server...
[17:04:32:794] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:99) - Redis exited
[17:04:32:803] [INFO] - com.example.fhdemo.SendAndReceivedMsgTest.lambda$testSendAndReceivedMsg$0(SendAndReceivedMsgTest.java:31) - Mq消息发送成功，correlationData：CorrelationData [id=sssss-1667379872747] ， messageId：sssss-1667379872747,cause:null
[17:04:32:838] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[17:04:33:785] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[17:04:33:804] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[17:04:33:811] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[17:04:33:812] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[17:04:33:815] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[17:04:33:817] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[17:04:33:863] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[17:04:34:790] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[17:04:34:814] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[17:04:34:825] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[17:04:34:825] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[17:04:34:826] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-2 - Shutdown initiated...
[17:04:34:827] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-2 - Shutdown completed.
[17:07:03:297] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:305) - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.fhdemo.SendAndReceivedMsgTest], using SpringBootContextLoader
[17:07:03:304] [INFO] - org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) - Could not detect default resource locations for test class [com.example.fhdemo.SendAndReceivedMsgTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[17:07:03:305] [INFO] - org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) - Could not detect default configuration classes for test class [com.example.fhdemo.SendAndReceivedMsgTest]: SendAndReceivedMsgTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[17:07:03:431] [INFO] - org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:238) - Found @SpringBootConfiguration com.example.fhdemo.FhDemoApplication for test class com.example.fhdemo.SendAndReceivedMsgTest
[17:07:03:509] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:245) - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[17:07:03:526] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:174) - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@41e1455d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4e558728, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5eccd3b9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4d6f197e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6ef7623, org.springframework.test.context.support.DirtiesContextTestExecutionListener@64e1dd11, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5c089b2f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6999cd39, org.springframework.test.context.event.EventPublishingTestExecutionListener@14bae047, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7ed9ae94, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@66908383, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41477a6d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2bc12da, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3122b117, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@534ca02b]
[17:07:04:184] [WARN] - org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer.logDuplicateJsonObjectsWarning(DuplicateJsonObjectContextCustomizerFactory.java:78) - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/D:/Server/Maven/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/D:/Server/Maven/repository/org/json/json/20220924/json-20220924.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

[17:07:04:208] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting SendAndReceivedMsgTest using Java 17.0.3.1 on zhanglei with PID 14124 (started by EDY in D:\IdeaProject\fh-demo)
[17:07:04:212] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[17:07:05:212] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:07:05:215] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[17:07:05:588] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 364 ms. Found 1 JPA repository interfaces.
[17:07:05:608] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:07:05:610] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[17:07:05:627] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[17:07:05:628] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
[17:07:05:964] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=1e994a33-a9fe-3fa9-b2e0-f947610ba76b
[17:07:06:189] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:07:06:192] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:07:06:198] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:07:06:414] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[17:07:06:594] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[17:07:06:671] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[17:07:06:764] [INFO] - org.hibernate.Version.logVersion(Version.java:44) - HHH000412: Hibernate ORM core version 5.6.10.Final
[17:07:07:001] [INFO] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56) - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[17:07:07:122] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[17:07:07:651] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[17:07:07:658] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[17:07:07:662] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[17:07:08:721] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[17:07:10:593] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[17:07:10:644] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[17:07:10:700] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#8eeb4c5:0/SimpleConnection@1d4ee936 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 52484]
[17:07:10:706] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-_S5bo1i8SbGJuchsfUYHng) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[17:07:10:793] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started SendAndReceivedMsgTest in 7.223 seconds (JVM running for 9.052)
[17:07:10:813] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.SendAndReceivedMsgTest.rabbitTemplate
[17:07:11:262] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting JUnitStarter using Java 17.0.3.1 on zhanglei with PID 14124 (started by EDY in D:\IdeaProject\fh-demo)
[17:07:11:264] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[17:07:11:550] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:07:11:551] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[17:07:11:569] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 18 ms. Found 1 JPA repository interfaces.
[17:07:11:577] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:07:11:578] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[17:07:11:588] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[17:07:11:589] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
[17:07:11:655] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=d671640a-2e9a-3116-b5d7-cb707b6923ff
[17:07:11:690] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:07:11:692] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:07:11:693] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:07:11:863] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:108) - Tomcat initialized with port(s): 8081 (http)
[17:07:11:876] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8081"]
[17:07:11:877] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[17:07:11:877] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.65]
[17:07:12:008] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[17:07:12:009] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292) - Root WebApplicationContext: initialization completed in 740 ms
[17:07:12:108] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-2 - Starting...
[17:07:12:111] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-2 - Start completed.
[17:07:12:121] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[17:07:12:128] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[17:07:12:153] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[17:07:12:154] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[17:07:12:155] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[17:07:12:435] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[17:07:13:041] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[17:07:13:054] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8081"]
[17:07:13:072] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:220) - Tomcat started on port(s): 8081 (http) with context path ''
[17:07:13:528] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[17:07:13:545] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#32fa956b:0/SimpleConnection@627a1c77 [delegate=amqp://guest@10.10.80.130:5672/, localPort= 52486]
[17:07:13:547] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-r-v77n2oQ-S5U0Dr8H7KMA) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[17:07:13:591] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started JUnitStarter in 2.531 seconds (JVM running for 11.851)
[17:07:13:630] [INFO] - com.example.fhdemo.mq.rabbitmq.FanoutCustomer.start(FanoutCustomer.java:25) - mq consume startMix:{}{"timestamp":1665763173,"eventId":1899121568,"para":{"mix_stream_session_id":"20220315FmgCd5VsiIG0L5xb","output_stream_type":"1","output_stream_id":"20220315FmgCd5VsiIG0L5xb","is_update_layer":true,"roomid":"30786","sessionId":"1400335539_30786","serialNumber":"T2020000120220315000000084","userid":"30786_u1","customid":"88","input_stream_list":[{"input_stream_id":"canvas1","layout_params":{"image_layer":1,"input_type":3,"image_width":1920,"image_height":1080}},{"input_stream_id":"1400335539_30786_30786_u1_main","layout_params":{"image_layer":2,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.000000000000000,"location_y":0.000000000000000}},{"input_stream_id":"1400335539_30786_30786_u2_main","layout_params":{"image_layer":3,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.500000000000000,"location_y":0.000000000000000}}]}}
[17:07:13:630] [INFO] - com.example.fhdemo.mq.rabbitmq.FanoutCustomer.start(FanoutCustomer.java:25) - mq consume startMix:{}{"timestamp":1665763173,"eventId":1899121568,"para":{"mix_stream_session_id":"20220315FmgCd5VsiIG0L5xb","output_stream_type":"1","output_stream_id":"20220315FmgCd5VsiIG0L5xb","is_update_layer":true,"roomid":"30786","sessionId":"1400335539_30786","serialNumber":"T2020000120220315000000084","userid":"30786_u1","customid":"88","input_stream_list":[{"input_stream_id":"canvas1","layout_params":{"image_layer":1,"input_type":3,"image_width":1920,"image_height":1080}},{"input_stream_id":"1400335539_30786_30786_u1_main","layout_params":{"image_layer":2,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.000000000000000,"location_y":0.000000000000000}},{"input_stream_id":"1400335539_30786_30786_u2_main","layout_params":{"image_layer":3,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.500000000000000,"location_y":0.000000000000000}}]}}
[17:07:13:653] [INFO] - com.example.fhdemo.SendAndReceivedMsgTest.lambda$testSendAndReceivedMsg$0(SendAndReceivedMsgTest.java:31) - Mq消息发送成功，correlationData：CorrelationData [id=sssss-1667380033597] ， messageId：sssss-1667380033597,cause:null
[17:07:13:657] [INFO] - com.example.fhdemo.SendAndReceivedMsgTest.testSendAndReceivedMsg(SendAndReceivedMsgTest.java:46) - Received:{"timestamp":1665763173,"eventId":1899121568,"para":{"mix_stream_session_id":"20220315FmgCd5VsiIG0L5xb","output_stream_type":"1","output_stream_id":"20220315FmgCd5VsiIG0L5xb","is_update_layer":true,"roomid":"30786","sessionId":"1400335539_30786","serialNumber":"T2020000120220315000000084","userid":"30786_u1","customid":"88","input_stream_list":[{"input_stream_id":"canvas1","layout_params":{"image_layer":1,"input_type":3,"image_width":1920,"image_height":1080}},{"input_stream_id":"1400335539_30786_30786_u1_main","layout_params":{"image_layer":2,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.000000000000000,"location_y":0.000000000000000}},{"input_stream_id":"1400335539_30786_30786_u2_main","layout_params":{"image_layer":3,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.500000000000000,"location_y":0.000000000000000}}]}},message:(Body:'[B@40597c95(byte[895])' MessageProperties [headers={}, correlationId=sssss1666859502439, contentType=text/plain, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=startMix, receivedRoutingKey=, deliveryTag=1, messageCount=27])
[17:07:13:683] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:92) - Stopping redis server...
[17:07:13:693] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:99) - Redis exited
[17:07:13:715] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[17:07:14:635] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[17:07:14:651] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[17:07:14:659] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[17:07:14:659] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[17:07:14:663] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[17:07:14:665] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[17:07:14:689] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[17:07:15:644] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[17:07:15:670] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[17:07:15:683] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[17:07:15:683] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[17:07:15:685] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-2 - Shutdown initiated...
[17:07:15:686] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-2 - Shutdown completed.
[17:12:22:963] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.buildDefaultMergedContextConfiguration(AbstractTestContextBootstrapper.java:305) - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.fhdemo.SendAndReceivedMsgTest], using SpringBootContextLoader
[17:12:22:971] [INFO] - org.springframework.test.context.support.AbstractContextLoader.generateDefaultLocations(AbstractContextLoader.java:264) - Could not detect default resource locations for test class [com.example.fhdemo.SendAndReceivedMsgTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[17:12:22:973] [INFO] - org.springframework.test.context.support.AnnotationConfigContextLoaderUtils.detectDefaultConfigurationClasses(AnnotationConfigContextLoaderUtils.java:83) - Could not detect default configuration classes for test class [com.example.fhdemo.SendAndReceivedMsgTest]: SendAndReceivedMsgTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[17:12:23:086] [INFO] - org.springframework.boot.test.context.SpringBootTestContextBootstrapper.getOrFindConfigurationClasses(SpringBootTestContextBootstrapper.java:238) - Found @SpringBootConfiguration com.example.fhdemo.FhDemoApplication for test class com.example.fhdemo.SendAndReceivedMsgTest
[17:12:23:165] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:245) - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[17:12:23:179] [INFO] - org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:174) - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@299266e2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5471388b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@66ea1466, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1601e47, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3bffddff, org.springframework.test.context.support.DirtiesContextTestExecutionListener@66971f6b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@50687efb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@517bd097, org.springframework.test.context.event.EventPublishingTestExecutionListener@142eef62, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4a9cc6cb, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5990e6c5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@56e07a08, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@35d6ca49, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1950e8a6, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@47289387]
[17:12:23:630] [WARN] - org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer.logDuplicateJsonObjectsWarning(DuplicateJsonObjectContextCustomizerFactory.java:78) - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/D:/Server/Maven/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/D:/Server/Maven/repository/org/json/json/20220924/json-20220924.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

[17:12:23:656] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting SendAndReceivedMsgTest using Java 17.0.3.1 on zhanglei with PID 18456 (started by EDY in D:\IdeaProject\fh-demo)
[17:12:23:660] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[17:12:24:529] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:12:24:533] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[17:12:24:880] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 336 ms. Found 1 JPA repository interfaces.
[17:12:24:895] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:12:24:896] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[17:12:24:915] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[17:12:24:915] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
[17:12:25:199] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=1e994a33-a9fe-3fa9-b2e0-f947610ba76b
[17:12:25:406] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:12:25:409] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:12:25:416] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:12:25:667] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[17:12:25:878] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[17:12:25:953] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[17:12:26:024] [INFO] - org.hibernate.Version.logVersion(Version.java:44) - HHH000412: Hibernate ORM core version 5.6.10.Final
[17:12:26:244] [INFO] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56) - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[17:12:26:389] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[17:12:26:861] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[17:12:26:867] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[17:12:26:871] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[17:12:27:728] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[17:12:29:401] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[17:12:29:443] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[17:12:29:655] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#13cae908:0/SimpleConnection@79de00af [delegate=amqp://guest@10.10.80.130:5672/, localPort= 63677]
[17:12:29:665] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-V8GkDquATbuH_9jlaMz0Ow) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[17:12:30:303] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started SendAndReceivedMsgTest in 7.048 seconds (JVM running for 8.731)
[17:12:30:318] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.SendAndReceivedMsgTest.rabbitTemplate
[17:12:30:732] [INFO] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55) - Starting JUnitStarter using Java 17.0.3.1 on zhanglei with PID 18456 (started by EDY in D:\IdeaProject\fh-demo)
[17:12:30:734] [INFO] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:634) - No active profile set, falling back to 1 default profile: "default"
[17:12:31:035] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:12:31:036] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[17:12:31:053] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 17 ms. Found 1 JPA repository interfaces.
[17:12:31:057] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:262) - Multiple Spring Data modules found, entering strict repository configuration mode
[17:12:31:058] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:132) - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[17:12:31:063] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:349) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.fhdemo.cache.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
[17:12:31:063] [INFO] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:201) - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
[17:12:31:119] [INFO] - org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:283) - BeanFactory id=d671640a-2e9a-3116-b5d7-cb707b6923ff
[17:12:31:148] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:12:31:150] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:12:31:151] [INFO] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:376) - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[17:12:31:358] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:108) - Tomcat initialized with port(s): 8081 (http)
[17:12:31:374] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-8081"]
[17:12:31:375] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[17:12:31:376] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.65]
[17:12:31:531] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[17:12:31:531] [INFO] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:292) - Root WebApplicationContext: initialization completed in 794 ms
[17:12:31:648] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-2 - Starting...
[17:12:31:652] [INFO] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-2 - Start completed.
[17:12:31:660] [INFO] - org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31) - HHH000204: Processing PersistenceUnitInfo [name: default]
[17:12:31:670] [INFO] - org.hibernate.dialect.Dialect.<init>(Dialect.java:175) - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[17:12:31:698] [INFO] - org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52) - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[17:12:31:698] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:437) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[17:12:31:699] [INFO] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.lambda$buildAutowiringMetadata$1(AutowiredAnnotationBeanPostProcessor.java:478) - Autowired annotation is not supported on static fields: static org.springframework.amqp.rabbit.core.RabbitTemplate com.example.fhdemo.FhDemoApplication.rabbitTemplate
[17:12:32:034] [WARN] - org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:219) - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[17:12:32:874] [WARN] - org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning(LoadBalancerCacheAutoConfiguration.java:82) - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[17:12:32:891] [INFO] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-8081"]
[17:12:32:924] [INFO] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:220) - Tomcat started on port(s): 8081 (http) with context path ''
[17:12:33:660] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort(AbstractConnectionFactory.java:650) - Attempting to connect to: 10.10.80.130:5672
[17:12:34:730] [INFO] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:589) - Created new connection: connectionFactory#6a339bc1:0/SimpleConnection@25b7ccfc [delegate=amqp://guest@10.10.80.130:5672/, localPort= 63685]
[17:12:34:731] [INFO] - org.springframework.amqp.rabbit.core.RabbitAdmin.initialize(RabbitAdmin.java:678) - Auto-declaring a non-durable, auto-delete, or exclusive Queue (spring.gen-8VuVvej9T0Ksu4Vl438AJQ) durable:false, auto-delete:true, exclusive:true. It will be redeclared if the broker stops and is restarted while the connection factory is alive, but all messages will be lost.
[17:12:34:882] [INFO] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61) - Started JUnitStarter in 4.4 seconds (JVM running for 13.311)
[17:12:34:946] [INFO] - com.example.fhdemo.SendAndReceivedMsgTest.lambda$testSendAndReceivedMsg$0(SendAndReceivedMsgTest.java:31) - Mq消息发送成功，correlationData：CorrelationData [id=sssss-1667380354887] ， messageId：sssss-1667380354887,cause:null
[17:12:34:964] [INFO] - com.example.fhdemo.mq.rabbitmq.FanoutCustomer.start(FanoutCustomer.java:25) - mq consume startMix:{}{"timestamp":1665763173,"eventId":1899121568,"para":{"mix_stream_session_id":"20220315FmgCd5VsiIG0L5xb","output_stream_type":"1","output_stream_id":"20220315FmgCd5VsiIG0L5xb","is_update_layer":true,"roomid":"30786","sessionId":"1400335539_30786","serialNumber":"T2020000120220315000000084","userid":"30786_u1","customid":"88","input_stream_list":[{"input_stream_id":"canvas1","layout_params":{"image_layer":1,"input_type":3,"image_width":1920,"image_height":1080}},{"input_stream_id":"1400335539_30786_30786_u1_main","layout_params":{"image_layer":2,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.000000000000000,"location_y":0.000000000000000}},{"input_stream_id":"1400335539_30786_30786_u2_main","layout_params":{"image_layer":3,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.500000000000000,"location_y":0.000000000000000}}]}}
[17:12:34:964] [INFO] - com.example.fhdemo.mq.rabbitmq.FanoutCustomer.start(FanoutCustomer.java:25) - mq consume startMix:{}{"timestamp":1665763173,"eventId":1899121568,"para":{"mix_stream_session_id":"20220315FmgCd5VsiIG0L5xb","output_stream_type":"1","output_stream_id":"20220315FmgCd5VsiIG0L5xb","is_update_layer":true,"roomid":"30786","sessionId":"1400335539_30786","serialNumber":"T2020000120220315000000084","userid":"30786_u1","customid":"88","input_stream_list":[{"input_stream_id":"canvas1","layout_params":{"image_layer":1,"input_type":3,"image_width":1920,"image_height":1080}},{"input_stream_id":"1400335539_30786_30786_u1_main","layout_params":{"image_layer":2,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.000000000000000,"location_y":0.000000000000000}},{"input_stream_id":"1400335539_30786_30786_u2_main","layout_params":{"image_layer":3,"image_width":0.500000000000000,"image_height":0.500000000000000,"location_x":0.500000000000000,"location_y":0.000000000000000}}]}}
[17:12:35:019] [ERROR] - org.springframework.amqp.rabbit.connection.AbstractConnectionFactory$DefaultChannelCloseLogger.log(AbstractConnectionFactory.java:748) - Shutdown Signal: channel error; protocol method: #method<channel.close>(reply-code=404, reply-text=NOT_FOUND - no queue 'startMix' in vhost '/', class-id=60, method-id=70)
[17:12:35:086] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:92) - Stopping redis server...
[17:12:35:099] [INFO] - redis.embedded.AbstractRedisInstance.stop(AbstractRedisInstance.java:99) - Redis exited
[17:12:35:157] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[17:12:35:975] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[17:12:35:999] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[17:12:36:151] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[17:12:36:151] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[17:12:36:156] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[17:12:36:160] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[17:12:36:303] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:648) - Waiting for workers to finish.
[17:12:36:979] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.lambda$shutdownAndWaitOrCallback$3(SimpleMessageListenerContainer.java:652) - Successfully waited for workers to finish.
[17:12:37:031] [INFO] - org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.shutdownAndWaitOrCallback(SimpleMessageListenerContainer.java:642) - Shutdown ignored - container is already stopped
[17:12:37:044] [INFO] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:651) - Closing JPA EntityManagerFactory for persistence unit 'default'
[17:12:37:044] [INFO] - org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:538) - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[17:12:37:045] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-2 - Shutdown initiated...
[17:12:37:046] [INFO] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-2 - Shutdown completed.
